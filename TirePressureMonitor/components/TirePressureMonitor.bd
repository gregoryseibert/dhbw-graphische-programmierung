classType components.TirePressureMonitor
blockdiagramSpecification Main {
	methodBody calc {
		outPin active {
			connection_5, connection_15, connection_17, connection_19, connection_21
		}
	}
	methodArgumentIdentifier calc.vFrontLeft at (41, 95) {
		label at (0, -1)
		outPin {
			connection_7
		}
		sequenceCall {
			inPin
		}
	}
	methodArgumentIdentifier calc.vFrontRight at (41, 165) {
		label at (0, -1)
		outPin {
			connection_8
		}
		sequenceCall {
			inPin
		}
	}
	methodArgumentIdentifier calc.vRearLeft at (41, 235) {
		label at (0, -1)
		outPin {
			connection_9
		}
		sequenceCall {
			inPin
		}
	}
	methodArgumentIdentifier calc.vRearRight at (41, 305) {
		label at (0, -1)
		outPin {
			connection_10
		}
		sequenceCall {
			inPin
		}
	}
	complexIdentifier averageCalculator at (441, 171) size (12, 5) {
		label at (-10, 1)
		methodCall lib.average.Average.calc {
			argumentPin inputVal1 at (left, 0) connection_11 {
				bendpoints (70, 0), (70, 90)
			}
			argumentPin inputVal2 at (left, 1) connection_12 {
				bendpoints (60, 0), (60, 30)
			}
			argumentPin inputVal3 at (left, 2) connection_13 {
				bendpoints (60, 0), (60, -30)
			}
			argumentPin inputVal4 at (left, 3) connection_14 {
				bendpoints (70, 0), (70, -90)
			}
			returnPin at (right, 0) {
				connection_6
			}
			sequenceCall {
				inPin
			}
		}
	}
	simpleIdentifier average at (601, 175) {
		label at (0, -1)
		inPin connection_6
		outPin sequenceCall {
			inPin connection_5
		}
	}
	complexIdentifier Integrator_instance at (181, 81) size (9, 3) {
		label at (0, 1)
		methodCall lib.integrator.Integrator.integrate {
			argumentPin dTVal at (left, 0) connection_16 {
				bendpoints (90, 0)
			}
			argumentPin inputVal at (left, 1) connection_7
			sequenceCall at (90, -24) {
				inPin connection_15
			}
		}
		methodCall lib.integrator.Integrator.outVal {
			returnPin at (right, 0) {
				connection_11
			}
			sequenceCall {
				inPin
			}
		}
	}
	complexIdentifier Integrator_instance at (181, 151) size (9, 3) {
		label at (0, 1)
		methodCall lib.integrator.Integrator.integrate {
			argumentPin dTVal at (left, 0) connection_18 {
				bendpoints (90, 0)
			}
			argumentPin inputVal at (left, 1) connection_8
			sequenceCall at (90, -24) {
				inPin connection_17
			}
		}
		methodCall lib.integrator.Integrator.outVal {
			returnPin at (right, 0) {
				connection_12
			}
			sequenceCall at (0, 0) {
				inPin
			}
		}
	}
	complexIdentifier Integrator_instance at (181, 221) size (9, 3) {
		label at (0, 1)
		methodCall lib.integrator.Integrator.integrate {
			argumentPin dTVal at (left, 0) connection_20 {
				bendpoints (90, 0)
			}
			argumentPin inputVal at (left, 1) connection_9
			sequenceCall at (90, -24) {
				inPin connection_19
			}
		}
		methodCall lib.integrator.Integrator.outVal {
			returnPin at (right, 0) {
				connection_13
			}
			sequenceCall at (0, 0) {
				inPin
			}
		}
	}
	complexIdentifier Integrator_instance at (181, 291) size (9, 3) {
		label at (0, 1)
		methodCall lib.integrator.Integrator.integrate {
			argumentPin dTVal at (left, 0) connection_22 {
				bendpoints (90, 0)
			}
			argumentPin inputVal at (left, 1) connection_10
			sequenceCall at (90, -24) {
				inPin connection_21
			}
		}
		methodCall lib.integrator.Integrator.outVal {
			returnPin at (right, 0) {
				connection_14
			}
			sequenceCall at (0, 0) {
				inPin
			}
		}
	}
	methodArgumentIdentifier calc.dTVal at (41, 25) {
		label at (0, -1)
		outPin {
			connection_18, connection_20, connection_22, connection_16
		}
		sequenceCall {
			inPin
		}
	}
}